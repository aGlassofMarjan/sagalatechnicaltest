// Variables
$max-width: 1000px;
$font-mono: "Courier New", monospace;
$callout-rgb: #ffffff70;
$callout-border-rgb: #cccccc;
$card-rgb: #f0f0f0;
$card-border-rgb: #b4b4b4;
$border-radius: 8px;
$background-start-rgb: #000000;
$background-end-rgb: #0a0a0a;
$primary-glow: #007bff80;
$secondary-glow: #ffffff80;

// Mixins
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Main styles
.main {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  padding: 6rem;
  min-height: 100vh;
}

// Description styles
.description {
  @extend .main;
  font-size: 0.85rem;
  max-width: $max-width;
  width: 100%;
  z-index: 2;
  font-family: $font-mono;

  a {
    @include flex-center;
    gap: 0.5rem;
  }

  p {
    position: relative;
    margin: 0;
    padding: 1rem;
    background-color: rgba($callout-rgb, 0.5);
    border: 1px solid rgba($callout-border-rgb, 0.3);
    border-radius: $border-radius;
  }
}

// Code styles
.code {
  font-weight: 700;
  font-family: $font-mono;
}

// Grid styles
.grid {
  display: grid;
  grid-template-columns: repeat(4, minmax(25%, auto));
  max-width: 100%;
  width: $max-width;
}

// Card styles
.card {
  padding: 1rem 1.2rem;
  border-radius: $border-radius;
  background: rgba($card-rgb, 0);
  border: 1px solid rgba($card-border-rgb, 0);
  transition: background 200ms, border 200ms;

  span {
    display: inline-block;
    transition: transform 200ms;
  }

  h2 {
    font-weight: 600;
    margin-bottom: 0.7rem;
  }

  p {
    margin: 0;
    opacity: 0.6;
    font-size: 0.9rem;
    line-height: 1.5;
    max-width: 30ch;
    text-wrap: balance;
  }

  @media (hover: hover) and (pointer: fine) {
    &:hover {
      background: rgba($card-rgb, 0.1);
      border: 1px solid rgba($card-border-rgb, 0.15);
    }

    &:hover span {
      transform: translateX(4px);
    }
  }

  @media (prefers-reduced-motion) {
    &:hover span {
      transform: none;
    }
  }
}

// Center styles
.center {
  @include flex-center;
  position: relative;
  padding: 4rem 0;

  &::before {
    background: $secondary-glow;
    border-radius: 50%;
    width: 480px;
    height: 360px;
    margin-left: -400px;
  }

  &::after {
    background: $primary-glow;
    width: 240px;
    height: 180px;
    z-index: -1;
  }

  &::before,
  &::after {
    content: "";
    left: 50%;
    position: absolute;
    filter: blur(45px);
    transform: translateZ(0);
  }
}

// Mobile-specific styles
@media (max-width: 700px) {
  .content {
    padding: 4rem;
  }

  .grid {
    grid-template-columns: 1fr;
    margin-bottom: 120px;
    max-width: 320px;
    text-align: center;
  }

  .card {
    padding: 1rem 2.5rem;
  }

  .card h2 {
    margin-bottom: 0.5rem;
  }

  .center {
    padding: 8rem 0 6rem;
  }

  .center::before {
    transform: none;
    height: 300px;
  }

  .description {
    font-size: 0.8rem;

    a {
      padding: 1rem;
    }

    p,
    div {
      @include flex-center;
      position: fixed;
      width: 100%;
    }

    p {
      align-items: center;
      inset: 0 0 auto;
      padding: 2rem 1rem 1.4rem;
      border-radius: 0;
      border: none;
      border-bottom: 1px solid rgba($callout-border-rgb, 0.25);
      background: linear-gradient(
        to bottom,
        rgba($background-start-rgb, 1),
        rgba($callout-rgb, 0.5)
      );
      background-clip: padding-box;
      backdrop-filter: blur(24px);
    }

    div {
      align-items: flex-end;
      pointer-events: none;
      inset: auto 0 0;
      padding: 2rem;
      height: 200px;
      background: linear-gradient(
        to bottom,
        transparent 0%,
        rgb($background-end-rgb, 0.4)
      );
      z-index: 1;
    }
  }
}

// Tablet and smaller desktop styles
@media (min-width: 701px) and (max-width: 1120px) {
  .grid {
    grid-template-columns: repeat(2, 50%);
  }
}

// Dark mode styles
@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .logo {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}

// Keyframe animations
@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}
